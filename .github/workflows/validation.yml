name: Validation

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        id: python_setup
        with:
          python-version: 3.11

      - name: Python Dependency Caching
        uses: actions/cache@v3
        id: python_cache
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: "python-${{ runner.os }}-v1-${{ steps.python_setup.outputs.python-version }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}"

      - name: Pre-commit Environment Caching
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: "precommit-${{ runner.os }}-v1-${{ steps.python_setup.outputs.python-version }-${{ hashFiles('.pre-commit-config.yaml') }}"

      - name: Install poetry
        shell: bash
        run: |
          pip install poetry

      - name: Install dependencies using poetry
        if: ${{ steps.python_cache.outputs.cache-hit }} == "true"
        shell: bash
        run: python -m poetry install --without release

      - name: Add poetry environment to path
        run: |
          echo "$(python -m poetry env info --path)/bin" >> $GITHUB_PATH
          python -m poetry -V

      - name: Run pre-commit hooks
        run: SKIP=black,isort,flake8,slotscheck,pyright pre-commit run --all-files

      - name: Run black formatter check
        run: black --check --diff .

      - name: Run isort import formatter check
        run: isort --check --diff .

      - name: Run flake8 linter
        run: flake8 .

      - name: Run slotscheck
        run: slotscheck -m mcproto

      - name: Run pyright type checker
        run: pyright .
