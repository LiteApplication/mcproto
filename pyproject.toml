[tool.poetry]
name = "mcproto"
version = "0.0.1a4.dev11+b8fa5cf" # Versioning handled by poetry-dynamic-versioning
description = "Library providing easy interactions with minecraft sevrers"
authors = ["ItsDrike <itsdrike@protonmail.com>"]
license = "LGPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/py-mine/mcproto"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Games/Entertainment",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Networking",
  "Typing :: Typed",
]
packages = [{ include = "mcproto" }]

[tool.poetry.dependencies]
python = ">=3.8,<4"
asyncio-dgram = "^2.1.2"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.18.1"
taskipy = "^1.10.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
pytest-asyncio = "^0.18.3"
pytest-cov = "^3.0.0"

[tool.poetry.group.lint.dependencies]
flake8 = "^4.0.1"
flake8-annotations = "^2.9.0"
flake8-bugbear = "^22.3.23"
flake8-builtins = "^2.1.0"
flake8-comprehensions = "^3.10.1"
flake8-dunder-all = "^0.2.2"
flake8-future-annotations = "^0.0.5"
flake8-mutable = "^1.2.0"
flake8-noqa = "^1.3.0"
flake8-pep3101 = "^2.0.0"
flake8-pep585 = { version = "^0.1.5", python = ">=3.9" }
flake8-print = "^5.0.0"
flake8-printf-formatting = "^1.1.2"
flake8-pytest-style = "^1.6.0"
flake8-raise = "^0.0.5"
flake8-simplify = "^0.19.2"
flake8-tidy-imports = "^4.6.0"
pep8-naming = "^0.12.1"
black = "^22.3.0"
isort = "^5.10.1"
pyright = "^1.1.239"

[tool.poetry.group.release.dependencies]
towncrier = "^22.12.0"

[tool.poetry.group.release-ci]
optional = true

[tool.poetry.group.release-ci.dependencies]
poetry-dynamic-versioning = "^0.21.3"

[tool.black]
line-length = 119

[tool.isort]
profile = "black"
line_length = 119
atomic = true
order_by_type = false
case_sensitive = true
combine_as_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--strict-markers --cov=mcproto --cov-branch --cov-report=term-missing --cov-report html --no-cov-on-fail --cov-fail-under=20"

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
sort = "cover"
exclude_lines = [
    "\\#\\s*pragma: no cover\\s",
    "^\\s*if (typing\\.)?TYPE_CHECKING:\\s",
    "^\\s*@(abc\\.)?abstractmethod\\s",
    "^\\s*@(typing\\.)?overload\\s",
    "^\\s*def __repr__\\(",
    "^\\s*class .*\\bProtocol\\):\\s",
    "^\\s*raise NotImplementedError\\s",
    "^\\s*return NotImplemented\\s",
    "^\\s*\\.\\.\\.\\s",
]

[tool.coverage.run]
relative_files = true
parallel = true
branch = true
timid = false
source = ["mcproto"]

[tool.towncrier]
package = "mcproto"
package_dir = "mcproto"
directory = "changes"
template = "changes/.template.rst"
filename = "CHANGELOG.md"
issue_format = "[#{issue}](https://github.com/py-mine/mcproto/issues/{issue})"
orphan_prefix = "+"   # Use '+' instead of number for fragments not connected to any PR
underlines = [2, 3]  # We use this for heading levels (see template file)
type = [
    { name = "Breaking Changes",            directory = "breaking",      showcontent = true },
    { name = "Deprecation",                 directory = "deprecation",   showcontent = true },
    { name = "Features",                    directory = "feature",       showcontent = true },
    { name = "Bugfixes",                    directory = "bugfix",        showcontent = true },
    { name = "Documentation Improvements",  directory = "documentation", showcontent = true },
]

[tool.taskipy.tasks]
precommit = "pre-commit install"
lint = "pre-commit run --all-files"
black = "black ."
isort = "isort ."
pyright = "pyright ."
flake8 = "flake8 ."
test = "pytest -v --failed-first"
retest = "pytest -v --last-failed"
test-nocov = "pytest -v --no-cov --failed-first"
retest-nocov = "pytest -v --no-cov --last-failed"

[tool.poetry-dynamic-versioning]
enable = true
bump = true
vcs = "git"
style = "pep440"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"
